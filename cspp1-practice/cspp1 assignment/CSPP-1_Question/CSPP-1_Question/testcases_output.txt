########## Testcase 0: Passed ##########
Expected Output: 
Given sudoku is solved

Your Output: 
Given sudoku is solved
----------------------------------------

########## Testcase 1: Passed ##########
Expected Output: 
7
7
7
7
7
7
7
7
7

Your Output: 
7
7
7
7
7
7
7
7
7
----------------------------------------

########## Testcase 2: Passed ##########
Expected Output: 
1
2
3
4
5
6
7
8
9

Your Output: 
1
2
3
4
5
6
7
8
9
----------------------------------------

########## Testcase 3: Failed ##########
Expected Output: 
5
6
2

Your Output: 
256
256
256
----------------------------------------

########## Testcase 4: Passed ##########
Expected Output: 
4
6
9

Your Output: 
4
6
9
----------------------------------------

########## Testcase 5: Failed ##########
Expected Output: 
34
37
47
268
68
2
59
19
15

Your Output: 
3
7
4
6
8
2
9
1
5
----------------------------------------

########## Testcase 6: Passed ##########
Expected Output: 
2
1
8
5
7
4
9
6
3

Your Output: 
2
1
8
5
7
4
9
6
3
----------------------------------------

########## Testcase 7: Failed ##########
Expected Output: 
7
2
6
3
1
5
4
8
9

Your Output: 
672
672
672
315
315
315
894
894
894
----------------------------------------

########## Testcase 8: Passed ##########
Expected Output: 
1
5
2
4
8
9
3
7
6

Your Output: 
1
5
2
4
8
9
3
7
6
----------------------------------------

########## Testcase 9: Failed ##########
Expected Output: 
378
378
378
125
125
125
469
469
469

Your Output: 
8
7
3
5
1
2
9
6
4
----------------------------------------

########## Testcase 10: Passed ##########
Expected Output: 
1
7
4
3
5
2
9
6
8

Your Output: 
1
7
4
3
5
2
9
6
8
----------------------------------------

########## Testcase 11: Passed ##########
Expected Output: 
6
1
5
9
8
3
2
7
4

Your Output: 
6
1
5
9
8
3
2
7
4
----------------------------------------

########## Testcase 12: Failed ##########
Expected Output: 
1
5
2
7
3
9
4
6
8

Your Output: 
512
512
512
739
739
739
468
468
468
----------------------------------------

########## Testcase 13: Failed ##########
Expected Output: 
258
258
258
137
137
137
469
469
469

Your Output: 
285
285
285
371
371
371
964
964
964
----------------------------------------

########## Testcase 14: Failed ##########
Expected Output: 
1
5
2
7
3
9
4
6
8
258
258
258
137
137
137
469
469
469

Your Output: 
521
521
521
739
739
739
684
684
684
582
582
582
731
731
731
694
694
694
----------------------------------------

########## Testcase 15: Failed ##########
Expected Output: 
12357
13
57
6
46
7
23
89
23489
3
34
27
2
15
15
1
17
59
5
68
68
36
36
34678
34678
34678
156
156
156
23689
23689
23689

Your Output: 
128379564
13
75
16
64
75
23
98
128379564
43
43
72
72
15
15
71
71
59
59
68
68
63
63
128379564
13
75
16
64
75
23
98
Traceback (most recent call last):
  File "sudoku.py", line 49, in <module>
    main()
  File "sudoku.py", line 41, in main
    result = set(['1','2','3','4','5','6',"7",'8','9']) - (getRowset(grid,row) or getColset(grid,col) or getSubgrid(grid,row,col))
  File "sudoku.py", line 22, in getSubgrid
    getgrid.add(grid[i][j])
NameError: name 'getgrid' is not defined
----------------------------------------

########## Testcase 16: Failed ##########
Expected Output: 
Invalid Sudoku:Duplicate values

Your Output: 
76549832
71654983
71654982
71659832
71649832
71549832
16549832
71654932
71654832
----------------------------------------

########## Testcase 17: Failed ##########
Expected Output: 
Invalid input

Your Output: 
Traceback (most recent call last):
  File "sudoku.py", line 49, in <module>
    main()
  File "sudoku.py", line 34, in main
    row.append(input_1[k])
IndexError: string index out of range
----------------------------------------

########## Testcase 18: Failed ##########
Expected Output: 
Invalid Sudoku:Duplicate values

Your Output: 
7
----------------------------------------

########## Testcase 19: Failed ##########
Expected Output: 
1679
12679
139
2369
1269
1239
26789
1256789
14589
24569
1245689
12679
1249
124679
2689
15689
125689
234569
1245689
12369
12349
123469
34789
135789
34579
34579
4579
135789
135789
3679
135679
135679
3579
25679
12359
123579
346789
3456789
356789
34579
245679
235789
23589
235789
289
289
289
14589
124589
124589
36789
36789
14789
14789
134689
134689
134689
236789
5789
5789
5789
235689
235689
235689

Your Output: 
326197
326197
326197
326197
326197
326197
52681497
52681497
52681497
52681497
52681497
52681497
52681497
52681497
35268149
35268149
35268149
35268149
35268149
35268149
35268149
35268149
3581497
3581497
3581497
3581497
3581497
3581497
3581497
3526197
3526197
3526197
3526197
3526197
3526197
3526197
35268497
35268497
35268497
35268497
35268497
35268497
35268497
35268497
528149
528149
528149
528149
528149
528149
3681497
3681497
3681497
3681497
3681497
3681497
3681497
3526897
3526897
3526897
3526897
3526897
3526897
3526897
----------------------------------------

########## Testcase 20: Failed ##########
Expected Output: 
Invalid input

Your Output: 
Traceback (most recent call last):
  File "sudoku.py", line 49, in <module>
    main()
  File "sudoku.py", line 34, in main
    row.append(input_1[k])
IndexError: string index out of range
----------------------------------------

########## Testcase 21: Failed ##########
Expected Output: 
124
26
2468
1489
1249
248
247
247
3478
234
2478
12
23
34
24
13457
247
1259
1259
1579
1457
4579
2459
259
2569
579
579
259
1359
1359
159
145
4589
459
134579
134579
357
357
357
134
2378
2378
2378
36
36
12345
12345
12345
2356
2356
1346

Your Output: 
249681
249681
249681
249681
249681
249681
72483
72483
72483
72483
72483
724531
724531
724531
724531
724531
724531
724591
724591
724591
724591
724591
724591
72596
72596
72596
72596
72596
459831
459831
459831
459831
459831
459831
745931
745931
745931
745931
745931
745931
72683
72683
72683
72683
72683
245631
245631
245631
245631
245631
245631
----------------------------------------

########## Testcase 22: Failed ##########
Expected Output: 
2369
2467
24679
2467
1346
23467
1247
2679
679
269
24567
46
24678
2478
1367
236
267
2678
267
136
3467
346
134567
1345
345
145
23467
23467
23467
349
2349
249
349
349
349
12345
12345
2345
234589
234569
234569
23456
23456
4569
4569
123456
123456
123456
234567
4567
4567
4567
45689
45689
45689
4567
4567
4567

Your Output: 
6794231
6794231
6794231
6794231
6794231
6794231
6794231
6794258
6794258
6794258
6794258
6794258
6794258
6794258
672318
672318
672318
672318
672318
672318
674531
674531
674531
674531
674531
674531
679423
679423
679423
679423
679423
679423
9425318
9425318
9425318
9425318
9425318
9425318
9425318
694253
694253
694253
694253
694253
694253
6742531
6742531
6742531
6742531
6742531
6742531
6742531
679458
679458
679458
679458
679458
679458
----------------------------------------

########## Testcase 23: Failed ##########
Expected Output: 
2
1
5
8
6
6
67
5
45
6
49
45
4
1
78
78
4
34
7
46
4
69
26
6

Your Output: 
21
21
568
568
568
76
76
54
54
5694
5694
5694
5694
781
781
781
743
743
743
694
694
694
62
62
----------------------------------------

########## Testcase 24: Failed ##########
Expected Output: 
2
6
346
13
134
58
8
9
4
8
36
138
13
348
34
368
368
3
235
23
48
234
23
38
147
147
13
137
127
1239
1239
1379
1379
128
128
129
19

Your Output: 
24163
24163
24163
24163
24163
9845
9845
9845
9845
6813
6813
6813
6813
6843
6843
6843
6843
325
325
325
3842
3842
3842
3842
3417
3417
3417
3417
72193
72193
72193
72193
72193
9812
9812
9812
9812
----------------------------------------

