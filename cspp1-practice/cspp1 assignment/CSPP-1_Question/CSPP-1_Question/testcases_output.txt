########## Testcase 0: Failed ##########
Expected Output: 
Given sudoku is solved

Your Output: 
Given Sudoko is solved
----------------------------------------

########## Testcase 1: Passed ##########
Expected Output: 
7
7
7
7
7
7
7
7
7

Your Output: 
7
7
7
7
7
7
7
7
7
----------------------------------------

########## Testcase 2: Passed ##########
Expected Output: 
1
2
3
4
5
6
7
8
9

Your Output: 
1
2
3
4
5
6
7
8
9
----------------------------------------

########## Testcase 3: Passed ##########
Expected Output: 
5
6
2

Your Output: 
5
6
2
----------------------------------------

########## Testcase 4: Passed ##########
Expected Output: 
4
6
9

Your Output: 
4
6
9
----------------------------------------

########## Testcase 5: Failed ##########
Expected Output: 
34
37
47
268
68
2
59
19
15

Your Output: 
3
7
4
6
8
2
9
1
5
----------------------------------------

########## Testcase 6: Passed ##########
Expected Output: 
2
1
8
5
7
4
9
6
3

Your Output: 
2
1
8
5
7
4
9
6
3
----------------------------------------

########## Testcase 7: Passed ##########
Expected Output: 
7
2
6
3
1
5
4
8
9

Your Output: 
7
2
6
3
1
5
4
8
9
----------------------------------------

########## Testcase 8: Passed ##########
Expected Output: 
1
5
2
4
8
9
3
7
6

Your Output: 
1
5
2
4
8
9
3
7
6
----------------------------------------

########## Testcase 9: Failed ##########
Expected Output: 
378
378
378
125
125
125
469
469
469

Your Output: 
8
7
3
5
1
2
9
6
4
----------------------------------------

########## Testcase 10: Passed ##########
Expected Output: 
1
7
4
3
5
2
9
6
8

Your Output: 
1
7
4
3
5
2
9
6
8
----------------------------------------

########## Testcase 11: Passed ##########
Expected Output: 
6
1
5
9
8
3
2
7
4

Your Output: 
6
1
5
9
8
3
2
7
4
----------------------------------------

########## Testcase 12: Passed ##########
Expected Output: 
1
5
2
7
3
9
4
6
8

Your Output: 
1
5
2
7
3
9
4
6
8
----------------------------------------

########## Testcase 13: Failed ##########
Expected Output: 
258
258
258
137
137
137
469
469
469

Your Output: 
5
8
2
1
3
7
9
6
4
----------------------------------------

########## Testcase 14: Failed ##########
Expected Output: 
1
5
2
7
3
9
4
6
8
258
258
258
137
137
137
469
469
469

Your Output: 
1
5
2
7
3
9
4
6
8
5
8
2
1
3
7
9
6
4
----------------------------------------

########## Testcase 15: Failed ##########
Expected Output: 
12357
13
57
6
46
7
23
89
23489
3
34
27
2
15
15
1
17
59
5
68
68
36
36
34678
34678
34678
156
156
156
23689
23689
23689

Your Output: 
31572
13
57
6
64
7
23
98
83924
3
43
27
2
51
51
1
17
59
5
86
86
63
63
83764
3
7
16
6
5
23
98
83962
----------------------------------------

########## Testcase 16: Failed ##########
Expected Output: 
Invalid Sudoku:Duplicate values

Your Output: 
567498
567498
567498
271938
271938
271938
562413
562413
562413
----------------------------------------

########## Testcase 17: Failed ##########
Expected Output: 
Invalid input

Your Output: 
Traceback (most recent call last):
  File "sudoku.py", line 47, in <module>
    main()
  File "sudoku.py", line 30, in main
    row.append(input_1[k])
IndexError: string index out of range
----------------------------------------

########## Testcase 18: Failed ##########
Expected Output: 
Invalid Sudoku:Duplicate values

Your Output: 
7
----------------------------------------

########## Testcase 19: Failed ##########
Expected Output: 
1679
12679
139
2369
1269
1239
26789
1256789
14589
24569
1245689
12679
1249
124679
2689
15689
125689
234569
1245689
12369
12349
123469
34789
135789
34579
34579
4579
135789
135789
3679
135679
135679
3579
25679
12359
123579
346789
3456789
356789
34579
245679
235789
23589
235789
289
289
289
14589
124589
124589
36789
36789
14789
14789
134689
134689
134689
236789
5789
5789
5789
235689
235689
235689

Your Output: 
7196
27169
913
9236
9126
9123
27869
2718659
41859
42659
4218659
27169
9124
427169
9286
18659
218659
423659
4218659
21369
42139
421369
7983
718359
9534
47359
7954
71359
71839
7936
71659
713659
935
27659
21359
27139
78369
478659
783659
9534
427659
27359
28359
27839
928
98
928
954
9125
42189
7986
78369
794
47189
9136
41839
418369
7986
985
795
7985
23659
28359
28369
----------------------------------------

########## Testcase 20: Failed ##########
Expected Output: 
Invalid input

Your Output: 
Traceback (most recent call last):
  File "sudoku.py", line 47, in <module>
    main()
  File "sudoku.py", line 30, in main
    row.append(input_1[k])
IndexError: string index out of range
----------------------------------------

########## Testcase 21: Failed ##########
Expected Output: 
124
26
2468
1489
1249
248
247
247
3478
234
2478
12
23
34
24
13457
247
1259
1259
1579
1457
4579
2459
259
2569
579
579
259
1359
1359
159
145
4589
459
134579
134579
357
357
357
134
2378
2378
2378
36
36
12345
12345
12345
2356
2356
1346

Your Output: 
142
62
6482
1849
1492
482
472
472
4387
432
4872
12
32
43
42
13475
472
125
1295
795
147
4795
4295
25
6295
5
795
295
15
1395
95
14
4895
495
139
134759
375
35
7
4
32
872
372
63
3
132
1425
13425
6325
62
6134
----------------------------------------

########## Testcase 22: Failed ##########
Expected Output: 
2369
2467
24679
2467
1346
23467
1247
2679
679
269
24567
46
24678
2478
1367
236
267
2678
267
136
3467
346
134567
1345
345
145
23467
23467
23467
349
2349
249
349
349
349
12345
12345
2345
234589
234569
234569
23456
23456
4569
4569
123456
123456
123456
234567
4567
4567
4567
45689
45689
45689
4567
4567
4567

Your Output: 
2936
7246
72649
7246
1436
37264
1724
7296
796
296
72564
46
72684
7284
1736
236
726
7286
726
136
736
436
17564
1453
543
14
37264
7246
37264
493
234
294
93
493
493
5234
1254
5234
32584
2936
4936
32564
2456
456
49
1236
1436
32564
72564
456
7456
74
96
496
56849
7456
7456
7456
----------------------------------------

########## Testcase 23: Failed ##########
Expected Output: 
2
1
5
8
6
6
67
5
45
6
49
45
4
1
78
78
4
34
7
46
4
69
26
6

Your Output: 
2
1
5
8
6
6
76
5
4
6
9
54
4
1
7
78
4
34
7
6
4
69
26
6
----------------------------------------

########## Testcase 24: Failed ##########
Expected Output: 
2
6
346
13
134
58
8
9
4
8
36
138
13
348
34
368
368
3
235
23
48
234
23
38
147
147
13
137
127
1239
1239
1379
1379
128
128
129
19

Your Output: 
2
6
643
13
413
85
8
9
4
8
63
813
13
8
43
63
83
3
523
23
84
423
23
83
1
74
13
713
7
23
13
93
913
812
8
912
91
----------------------------------------

